datatype COM = s | r
datatype ID = lf1id|lf2id|lf3id
datatype ID_SD = sd1id|sd2id
datatype MSG = withdrawCash_I|withdrawCash_O|getBalance_I|getBalance_O|debit_I|debit_O
subtype ATM_OPS = withdrawCash_I | withdrawCash_O
subtype Bank_OPS = getBalance_I | getBalance_O | debit_I | debit_O
get_id(withdrawCash_I) = withdrawCash_I
get_id(withdrawCash_O) = withdrawCash_O
get_id(getBalance_I) = getBalance_I
get_id(getBalance_O) = getBalance_O
get_id(debit_I) = debit_I
get_id(debit_O) = debit_O
channel beginInteraction,endInteraction
channel ATM_mOP: COM.ID.ID.ATM_OPS
channel Bank_mOP: COM.ID.ID.Bank_OPS
Seq0_cust_Customer(sd_id,lf1_id,lf2_id) =(ATM_mOP.s!lf1_id!lf2_id.withdrawCash_I -> SKIP);(ATM_mOP.r!lf2_id!lf1_id?out:{x | x <-ATM_OPS,(get_id(x) == withdrawCash_O)} -> SKIP)
Seq0_teller_ATM(sd_id,lf1_id,lf2_id,lf3_id) =(ATM_mOP.r!lf1_id!lf2_id?oper:{x | x <- ATM_OPS,(get_id(x) == withdrawCash_I)} -> SKIP);(Bank_mOP.s!lf2_id!lf3_id.getBalance_I -> SKIP);(Bank_mOP.r!lf3_id!lf2_id?out:{x | x <-Bank_OPS,(get_id(x) == getBalance_O)} -> SKIP);(Bank_mOP.s!lf2_id!lf3_id.debit_I -> SKIP);(Bank_mOP.r!lf3_id!lf2_id?out:{x | x <-Bank_OPS,(get_id(x) == debit_O)} -> SKIP);(ATM_mOP.s!lf2_id!lf1_id.withdrawCash_O -> SKIP)
Seq0_theirBank_Bank(sd_id,lf2_id,lf3_id) =(Bank_mOP.r!lf2_id!lf3_id?oper:{x | x <- Bank_OPS,(get_id(x) == getBalance_I)} -> SKIP);(Bank_mOP.s!lf3_id!lf2_id.getBalance_O -> SKIP);(Bank_mOP.r!lf2_id!lf3_id?oper:{x | x <- Bank_OPS,(get_id(x) == debit_I)} -> SKIP);(Bank_mOP.s!lf3_id!lf2_id.debit_O -> SKIP)
Seq0_cust_Customer_teller_ATM_withdrawCash(sd_id,lf1_id,lf2_id) =ATM_mOP.s.lf1_id.lf2_id?x:{x | x<-ATM_OPS,get_id(x) == withdrawCash_I} -> ATM_mOP.r.lf1_id.lf2_id!x -> Seq0_cust_Customer_teller_ATM_withdrawCash(sd_id,lf1_id,lf2_id)
Seq0_teller_ATM_theirBank_Bank_getBalance(sd_id,lf2_id,lf3_id) =Bank_mOP.s.lf2_id.lf3_id?x:{x | x<-Bank_OPS,get_id(x) == getBalance_I} -> Bank_mOP.r.lf2_id.lf3_id!x -> Seq0_teller_ATM_theirBank_Bank_getBalance(sd_id,lf2_id,lf3_id)
Seq0_theirBank_Bank_teller_ATM_getBalance_r(sd_id,lf3_id,lf2_id) = Bank_mOP.s.lf3_id.lf2_id?x:{x | x<-Bank_OPS,get_id(x) == getBalance_O} -> Bank_mOP.r.lf3_id.lf2_id!x -> Seq0_theirBank_Bank_teller_ATM_getBalance_r(sd_id,lf3_id,lf2_id)
Seq0_teller_ATM_theirBank_Bank_debit(sd_id,lf2_id,lf3_id) =Bank_mOP.s.lf2_id.lf3_id?x:{x | x<-Bank_OPS,get_id(x) == debit_I} -> Bank_mOP.r.lf2_id.lf3_id!x -> Seq0_teller_ATM_theirBank_Bank_debit(sd_id,lf2_id,lf3_id)
Seq0_theirBank_Bank_teller_ATM_debit_r(sd_id,lf3_id,lf2_id) = Bank_mOP.s.lf3_id.lf2_id?x:{x | x<-Bank_OPS,get_id(x) == debit_O} -> Bank_mOP.r.lf3_id.lf2_id!x -> Seq0_theirBank_Bank_teller_ATM_debit_r(sd_id,lf3_id,lf2_id)
Seq0_teller_ATM_cust_Customer_withdrawCash_r(sd_id,lf2_id,lf1_id) = ATM_mOP.s.lf2_id.lf1_id?x:{x | x<-ATM_OPS,get_id(x) == withdrawCash_O} -> ATM_mOP.r.lf2_id.lf1_id!x -> Seq0_teller_ATM_cust_Customer_withdrawCash_r(sd_id,lf2_id,lf1_id)
Seq0_MessagesBuffer(sd_id,lf1_id,lf2_id,lf3_id) = (Seq0_cust_Customer_teller_ATM_withdrawCash(sd_id,lf1_id,lf2_id) ||| Seq0_teller_ATM_theirBank_Bank_getBalance(sd_id,lf2_id,lf3_id) ||| Seq0_theirBank_Bank_teller_ATM_getBalance_r(sd_id,lf3_id,lf2_id) ||| Seq0_teller_ATM_theirBank_Bank_debit(sd_id,lf2_id,lf3_id) ||| Seq0_theirBank_Bank_teller_ATM_debit_r(sd_id,lf3_id,lf2_id) ||| Seq0_teller_ATM_cust_Customer_withdrawCash_r(sd_id,lf2_id,lf1_id))/\endInteraction -> SKIP
Seq0Parallel(sd_id,lf1_id,lf2_id,lf3_id) = (Seq0_cust_Customer(sd_id,lf1_id,lf2_id)[ {|ATM_mOP.s.lf1_id.lf2_id.withdrawCash_I, ATM_mOP.r.lf2_id.lf1_id.withdrawCash_O|} || {|ATM_mOP.r.lf1_id.lf2_id.withdrawCash_I,Bank_mOP.s.lf2_id.lf3_id.getBalance_I, Bank_mOP.r.lf3_id.lf2_id.getBalance_O,Bank_mOP.s.lf2_id.lf3_id.debit_I, Bank_mOP.r.lf3_id.lf2_id.debit_O, ATM_mOP.s.lf2_id.lf1_id.withdrawCash_O|} ]Seq0_teller_ATM(sd_id,lf1_id,lf2_id,lf3_id))[ {|ATM_mOP.s.lf1_id.lf2_id.withdrawCash_I, ATM_mOP.r.lf2_id.lf1_id.withdrawCash_O, ATM_mOP.r.lf1_id.lf2_id.withdrawCash_I,Bank_mOP.s.lf2_id.lf3_id.getBalance_I, Bank_mOP.r.lf3_id.lf2_id.getBalance_O,Bank_mOP.s.lf2_id.lf3_id.debit_I, Bank_mOP.r.lf3_id.lf2_id.debit_O, ATM_mOP.s.lf2_id.lf1_id.withdrawCash_O|} || {|Bank_mOP.r.lf2_id.lf3_id.getBalance_I, Bank_mOP.s.lf3_id.lf2_id.getBalance_O, Bank_mOP.r.lf2_id.lf3_id.debit_I, Bank_mOP.s.lf3_id.lf2_id.debit_O|} ]Seq0_theirBank_Bank(sd_id,lf2_id,lf3_id)
SD_Seq0(sd_id,lf1_id,lf2_id,lf3_id) = beginInteraction ->((Seq0Parallel(sd_id,lf1_id,lf2_id,lf3_id); endInteraction -> SKIP)[|{|ATM_mOP.s.lf1_id.lf2_id.withdrawCash_I,ATM_mOP.r.lf1_id.lf2_id.withdrawCash_I,Bank_mOP.s.lf2_id.lf3_id.getBalance_I,Bank_mOP.r.lf2_id.lf3_id.getBalance_I,Bank_mOP.s.lf3_id.lf2_id.getBalance_O,Bank_mOP.r.lf3_id.lf2_id.getBalance_O,Bank_mOP.s.lf2_id.lf3_id.debit_I,Bank_mOP.r.lf2_id.lf3_id.debit_I,Bank_mOP.s.lf3_id.lf2_id.debit_O,Bank_mOP.r.lf3_id.lf2_id.debit_O,ATM_mOP.s.lf2_id.lf1_id.withdrawCash_O,ATM_mOP.r.lf2_id.lf1_id.withdrawCash_O,endInteraction|}|]Seq0_MessagesBuffer(sd_id,lf1_id,lf2_id,lf3_id))
Seq1_custb_Customer(sd_id,lf1_id,lf2_id) =(ATM_mOP.s!lf1_id!lf2_id.withdrawCash_I -> SKIP);(ATM_mOP.r!lf2_id!lf1_id?out:{x | x <-ATM_OPS,(get_id(x) == withdrawCash_O)} -> SKIP)
Seq1_atm2_ATM(sd_id,lf1_id,lf2_id,lf3_id) =(ATM_mOP.r!lf1_id!lf2_id?oper:{x | x <- ATM_OPS,(get_id(x) == withdrawCash_I)} -> SKIP);(Bank_mOP.s!lf2_id!lf3_id.debit_I -> SKIP);(Bank_mOP.r!lf3_id!lf2_id?out:{x | x <-Bank_OPS,(get_id(x) == debit_O)} -> SKIP);(ATM_mOP.s!lf2_id!lf1_id.withdrawCash_O -> SKIP)
Seq1_banco2_Bank(sd_id,lf2_id,lf3_id) =(Bank_mOP.r!lf2_id!lf3_id?oper:{x | x <- Bank_OPS,(get_id(x) == debit_I)} -> SKIP);(Bank_mOP.s!lf3_id!lf2_id.debit_O -> SKIP)
Seq1_custb_Customer_atm2_ATM_withdrawCash(sd_id,lf1_id,lf2_id) =ATM_mOP.s.lf1_id.lf2_id?x:{x | x<-ATM_OPS,get_id(x) == withdrawCash_I} -> ATM_mOP.r.lf1_id.lf2_id!x -> Seq1_custb_Customer_atm2_ATM_withdrawCash(sd_id,lf1_id,lf2_id)
Seq1_atm2_ATM_banco2_Bank_debit(sd_id,lf2_id,lf3_id) =Bank_mOP.s.lf2_id.lf3_id?x:{x | x<-Bank_OPS,get_id(x) == debit_I} -> Bank_mOP.r.lf2_id.lf3_id!x -> Seq1_atm2_ATM_banco2_Bank_debit(sd_id,lf2_id,lf3_id)
Seq1_banco2_Bank_atm2_ATM_debit_r(sd_id,lf3_id,lf2_id) = Bank_mOP.s.lf3_id.lf2_id?x:{x | x<-Bank_OPS,get_id(x) == debit_O} -> Bank_mOP.r.lf3_id.lf2_id!x -> Seq1_banco2_Bank_atm2_ATM_debit_r(sd_id,lf3_id,lf2_id)
Seq1_atm2_ATM_custb_Customer_withdrawCash_r(sd_id,lf2_id,lf1_id) = ATM_mOP.s.lf2_id.lf1_id?x:{x | x<-ATM_OPS,get_id(x) == withdrawCash_O} -> ATM_mOP.r.lf2_id.lf1_id!x -> Seq1_atm2_ATM_custb_Customer_withdrawCash_r(sd_id,lf2_id,lf1_id)
Seq1_MessagesBuffer(sd_id,lf1_id,lf2_id,lf3_id) = (Seq1_custb_Customer_atm2_ATM_withdrawCash(sd_id,lf1_id,lf2_id) ||| Seq1_atm2_ATM_banco2_Bank_debit(sd_id,lf2_id,lf3_id) ||| Seq1_banco2_Bank_atm2_ATM_debit_r(sd_id,lf3_id,lf2_id) ||| Seq1_atm2_ATM_custb_Customer_withdrawCash_r(sd_id,lf2_id,lf1_id))/\endInteraction -> SKIP
Seq1Parallel(sd_id,lf1_id,lf2_id,lf3_id) = (Seq1_custb_Customer(sd_id,lf1_id,lf2_id)[ {|ATM_mOP.s.lf1_id.lf2_id.withdrawCash_I, ATM_mOP.r.lf2_id.lf1_id.withdrawCash_O|} || {|ATM_mOP.r.lf1_id.lf2_id.withdrawCash_I,Bank_mOP.s.lf2_id.lf3_id.debit_I, Bank_mOP.r.lf3_id.lf2_id.debit_O, ATM_mOP.s.lf2_id.lf1_id.withdrawCash_O|} ]Seq1_atm2_ATM(sd_id,lf1_id,lf2_id,lf3_id))[ {|ATM_mOP.s.lf1_id.lf2_id.withdrawCash_I, ATM_mOP.r.lf2_id.lf1_id.withdrawCash_O, ATM_mOP.r.lf1_id.lf2_id.withdrawCash_I,Bank_mOP.s.lf2_id.lf3_id.debit_I, Bank_mOP.r.lf3_id.lf2_id.debit_O, ATM_mOP.s.lf2_id.lf1_id.withdrawCash_O|} || {|Bank_mOP.r.lf2_id.lf3_id.debit_I, Bank_mOP.s.lf3_id.lf2_id.debit_O|} ]Seq1_banco2_Bank(sd_id,lf2_id,lf3_id)
SD_Seq1(sd_id,lf1_id,lf2_id,lf3_id) = beginInteraction ->((Seq1Parallel(sd_id,lf1_id,lf2_id,lf3_id); endInteraction -> SKIP)[|{|ATM_mOP.s.lf1_id.lf2_id.withdrawCash_I,ATM_mOP.r.lf1_id.lf2_id.withdrawCash_I,Bank_mOP.s.lf2_id.lf3_id.debit_I,Bank_mOP.r.lf2_id.lf3_id.debit_I,Bank_mOP.s.lf3_id.lf2_id.debit_O,Bank_mOP.r.lf3_id.lf2_id.debit_O,ATM_mOP.s.lf2_id.lf1_id.withdrawCash_O,ATM_mOP.r.lf2_id.lf1_id.withdrawCash_O,endInteraction|}|]Seq1_MessagesBuffer(sd_id,lf1_id,lf2_id,lf3_id))
assert SD_Seq0(sd1id,lf1id,lf2id,lf3id) [T= SD_Seq1(sd2id,lf1id,lf2id,lf3id)
assert SD_Seq1(sd2id,lf1id,lf2id,lf3id)\{||} [T= SD_Seq0(sd1id,lf1id,lf2id,lf3id)