ID_flowFinal5 = {1..1}
datatype T = lock | unlock
x_flowFinal5 = {0..1}
countGet_flowFinal5 = {1..2}
countSet_flowFinal5 = {1..2}
countCe_flowFinal5 = {1..3}
countOe_flowFinal5 = {1..2}
countUpdate_flowFinal5 = {1..6}
countClear_flowFinal5 = {1..1}
limiteUpdate_flowFinal5 = {(-1)..(1)}
channel startActivity_flowFinal5: ID_flowFinal5.x_flowFinal5
channel endActivity_flowFinal5: ID_flowFinal5
channel get_x_flowFinal5: countGet_flowFinal5.x_flowFinal5
channel get_x_act2_flowFinal5: countGet_flowFinal5.x_flowFinal5
channel set_x_flowFinal5: countSet_flowFinal5.x_flowFinal5
channel set_x_act2_flowFinal5: countSet_flowFinal5.x_flowFinal5
channel ce_flowFinal5: countCe_flowFinal5
channel oe_x_flowFinal5: countOe_flowFinal5.x_flowFinal5
channel clear_flowFinal5: countClear_flowFinal5
channel update_flowFinal5: countUpdate_flowFinal5.limiteUpdate_flowFinal5
channel endDiagram_flowFinal5
channel event_act1_flowFinal5,event_act2_flowFinal5,event_act3_flowFinal5
channel lock_act1_flowFinal5,lock_act2_flowFinal5,lock_act3_flowFinal5: T
channel loop
MAIN = flowFinal5(1); LOOP
LOOP = loop -> LOOP
END_DIAGRAM_flowFinal5 = endDiagram_flowFinal5 -> SKIP
flowFinal5(ID_flowFinal5) = ((((Internal_flowFinal5(ID_flowFinal5) [|{|update_flowFinal5,clear_flowFinal5,endDiagram_flowFinal5|}|] TokenManager_flowFinal5_t(0,0))) [|{|lock_act1_flowFinal5,lock_act2_flowFinal5,lock_act3_flowFinal5,endDiagram_flowFinal5|}|] Lock_flowFinal5) [|{|get_x_flowFinal5,set_x_flowFinal5,endActivity_flowFinal5|}|] Mem_flowFinal5)
Internal_flowFinal5(ID_flowFinal5) = StartActivity_flowFinal5(ID_flowFinal5); Node_flowFinal5; EndActivity_flowFinal5(ID_flowFinal5)
StartActivity_flowFinal5(ID_flowFinal5) = startActivity_flowFinal5.ID_flowFinal5?x -> set_x_flowFinal5.1!1 -> SKIP
EndActivity_flowFinal5(ID_flowFinal5) = endActivity_flowFinal5.ID_flowFinal5 -> SKIP
Node_flowFinal5 = ((((act1_flowFinal5_t [{|ce_flowFinal5.1,lock_act1_flowFinal5,event_act1_flowFinal5,update_flowFinal5.4,ce_flowFinal5.2,endDiagram_flowFinal5|}||{|ce_flowFinal5.3,oe_x_flowFinal5.2,update_flowFinal5.6,endDiagram_flowFinal5|}] flowFinal1_flowFinal5_t) [{|ce_flowFinal5.1,lock_act1_flowFinal5,event_act1_flowFinal5,update_flowFinal5.4,ce_flowFinal5.2,endDiagram_flowFinal5,ce_flowFinal5.3,oe_x_flowFinal5.2,update_flowFinal5.6|}||{|update_flowFinal5.3,ce_flowFinal5.1,update_flowFinal5.1,get_x_flowFinal5.1,oe_x_flowFinal5.1,endDiagram_flowFinal5|}] init_flowFinal5_t) [{|oe_x_flowFinal5.1,get_x_flowFinal5.1,update_flowFinal5.1,update_flowFinal5.3,ce_flowFinal5.1,lock_act1_flowFinal5,event_act1_flowFinal5,update_flowFinal5.4,ce_flowFinal5.2,endDiagram_flowFinal5,ce_flowFinal5.3,oe_x_flowFinal5.2,update_flowFinal5.6|}||{|ce_flowFinal5.3,lock_act3_flowFinal5,event_act3_flowFinal5,update_flowFinal5.5,ce_flowFinal5.2,endDiagram_flowFinal5|}] act3_flowFinal5_t) [{|ce_flowFinal5.2,update_flowFinal5.5,event_act3_flowFinal5,lock_act3_flowFinal5,oe_x_flowFinal5.1,get_x_flowFinal5.1,update_flowFinal5.1,update_flowFinal5.3,ce_flowFinal5.1,lock_act1_flowFinal5,event_act1_flowFinal5,update_flowFinal5.4,ce_flowFinal5.2,endDiagram_flowFinal5,ce_flowFinal5.3,oe_x_flowFinal5.2,update_flowFinal5.6|}||{|oe_x_flowFinal5.1,lock_act2_flowFinal5,event_act2_flowFinal5,update_flowFinal5.2,oe_x_flowFinal5.2,endDiagram_flowFinal5|}] act2_flowFinal5_t)
parameter_x_t = update_flowFinal5.1!(1-0) -> get_x_flowFinal5.1?x -> ((oe_x_flowFinal5.1!x -> SKIP))
act2_flowFinal5 = ((oe_x_flowFinal5.1?x -> set_x_act2_flowFinal5.2!x -> SKIP)); lock_act2_flowFinal5.lock -> event_act2_flowFinal5 -> lock_act2_flowFinal5.unlock -> update_flowFinal5.2!(1-1) -> get_x_act2_flowFinal5.2?x -> ((oe_x_flowFinal5.2!(x) -> SKIP)); act2_flowFinal5
act2_flowFinal5_t = ((act2_flowFinal5 /\ END_DIAGRAM_flowFinal5) [|{|get_x_act2_flowFinal5,set_x_act2_flowFinal5,endDiagram_flowFinal5|}|] Mem_act2_flowFinal5_x_t(0)) \{|get_x_act2_flowFinal5,set_x_act2_flowFinal5|}
init1_flowFinal5_t = update_flowFinal5.3!(1-0) -> ((ce_flowFinal5.1 -> SKIP))
act1_flowFinal5 = ((ce_flowFinal5.1 -> SKIP)); lock_act1_flowFinal5.lock -> event_act1_flowFinal5 -> lock_act1_flowFinal5.unlock -> update_flowFinal5.4!(1-1) -> ((ce_flowFinal5.2 -> SKIP)); act1_flowFinal5
act1_flowFinal5_t = act1_flowFinal5 /\ END_DIAGRAM_flowFinal5
act3_flowFinal5 = ((ce_flowFinal5.2 -> SKIP)); lock_act3_flowFinal5.lock -> event_act3_flowFinal5 -> lock_act3_flowFinal5.unlock -> update_flowFinal5.5!(1-1) -> ((ce_flowFinal5.3 -> SKIP)); act3_flowFinal5
act3_flowFinal5_t = act3_flowFinal5 /\ END_DIAGRAM_flowFinal5
flowFinal1_flowFinal5 = ((oe_x_flowFinal5.2?x -> SKIP) [] (ce_flowFinal5.3 -> SKIP)); update_flowFinal5.6!(0-1) -> flowFinal1_flowFinal5
flowFinal1_flowFinal5_t = flowFinal1_flowFinal5 /\ END_DIAGRAM_flowFinal5
init_flowFinal5_t = (parameter_x_t ||| init1_flowFinal5_t) /\ END_DIAGRAM_flowFinal5
Mem_act2_flowFinal5_x(x) = get_x_act2_flowFinal5?c!x -> Mem_act2_flowFinal5_x(x) [] set_x_act2_flowFinal5?c?x -> Mem_act2_flowFinal5_x(x)
Mem_act2_flowFinal5_x_t(x) = Mem_act2_flowFinal5_x(x) /\ END_DIAGRAM_flowFinal5
Mem_flowFinal5_x(x) = get_x_flowFinal5?c!x -> Mem_flowFinal5_x(x) [] set_x_flowFinal5?c?x -> Mem_flowFinal5_x(x)
Mem_flowFinal5_x_t(x) = Mem_flowFinal5_x(x) /\ (endActivity_flowFinal5?x -> SKIP)
Mem_flowFinal5 = Mem_flowFinal5_x_t(0)
TokenManager_flowFinal5(x,init) = update_flowFinal5?c?y:limiteUpdate_flowFinal5 -> x+y < 10 & x+y > -10 & TokenManager_flowFinal5(x+y,1) [] clear_flowFinal5?c -> endDiagram_flowFinal5 -> SKIP [] x == 0 & init == 1 & endDiagram_flowFinal5 -> SKIP
TokenManager_flowFinal5_t(x,init) = TokenManager_flowFinal5(x,init)
Lock_act1_flowFinal5 = lock_act1_flowFinal5.lock -> lock_act1_flowFinal5.unlock -> Lock_act1_flowFinal5 [] endDiagram_flowFinal5 -> SKIP
Lock_act2_flowFinal5 = lock_act2_flowFinal5.lock -> lock_act2_flowFinal5.unlock -> Lock_act2_flowFinal5 [] endDiagram_flowFinal5 -> SKIP
Lock_act3_flowFinal5 = lock_act3_flowFinal5.lock -> lock_act3_flowFinal5.unlock -> Lock_act3_flowFinal5 [] endDiagram_flowFinal5 -> SKIP
Lock_flowFinal5 = ((Lock_act1_flowFinal5 [|{|endDiagram_flowFinal5|}|] Lock_act2_flowFinal5) [|{|endDiagram_flowFinal5|}|] Lock_act3_flowFinal5)