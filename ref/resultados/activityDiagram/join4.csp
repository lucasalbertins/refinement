ID_join4 = {1..1}
datatype T = lock | unlock
y_join4 = {0..1}
x_join4 = {0..1}
countGet_join4 = {1..2}
countSet_join4 = {1..2}
countOe_join4 = {1..6}
countUpdate_join4 = {1..4}
countClear_join4 = {1..1}
limiteUpdate_join4 = {(-1)..(1)}
channel startActivity_join4: ID_join4.y_join4.x_join4
channel endActivity_join4: ID_join4
channel get_y_join4: countGet_join4.y_join4
channel set_y_join4: countSet_join4.y_join4
channel get_x_join4: countGet_join4.x_join4
channel set_x_join4: countSet_join4.x_join4
channel oe_y_join4: countOe_join4.y_join4
channel oe_x_join4: countOe_join4.x_join4
channel clear_join4: countClear_join4
channel update_join4: countUpdate_join4.limiteUpdate_join4
channel endDiagram_join4
channel event_act1_join4
channel lock_act1_join4: T
channel loop
MAIN = join4(1); LOOP
LOOP = loop -> LOOP
END_DIAGRAM_join4 = endDiagram_join4 -> SKIP
join4(ID_join4) = ((((Internal_join4(ID_join4) [|{|update_join4,clear_join4,endDiagram_join4|}|] TokenManager_join4_t(0,0))) [|{|lock_act1_join4,endDiagram_join4|}|] Lock_join4) [|{|get_x_join4,set_x_join4,get_y_join4,set_y_join4,endActivity_join4|}|] Mem_join4)
Internal_join4(ID_join4) = StartActivity_join4(ID_join4); Node_join4; EndActivity_join4(ID_join4)
StartActivity_join4(ID_join4) = startActivity_join4.ID_join4?y?x -> set_y_join4.1!y -> set_x_join4.2!x -> SKIP
EndActivity_join4(ID_join4) = endActivity_join4.ID_join4 -> SKIP
Node_join4 = (((init_join4_t [{|update_join4.1,update_join4.2,oe_x_join4.2,oe_y_join4.1,get_x_join4.2,get_y_join4.1,endDiagram_join4|}||{|oe_y_join4.1,oe_x_join4.2,update_join4.3,oe_x_join4.4,oe_y_join4.3,endDiagram_join4|}] join1_join4_t) [{|update_join4.1,update_join4.2,oe_x_join4.2,oe_y_join4.1,get_x_join4.2,get_y_join4.1,endDiagram_join4,update_join4.3,oe_x_join4.4,oe_y_join4.3|}||{|oe_y_join4.3,lock_act1_join4,event_act1_join4,update_join4.4,oe_y_join4.5,oe_x_join4.4,oe_x_join4.6,endDiagram_join4|}] act1_join4_t) [{|update_join4.1,update_join4.2,oe_x_join4.2,oe_y_join4.1,get_x_join4.2,get_y_join4.1,endDiagram_join4,update_join4.3,oe_x_join4.4,oe_y_join4.3,lock_act1_join4,event_act1_join4,update_join4.4,oe_y_join4.5,oe_x_join4.6|}||{|oe_y_join4.5,oe_x_join4.6,clear_join4.1,endDiagram_join4|}] fin1_join4_t)
parameter_y_t = update_join4.1!(1-0) -> get_y_join4.1?y -> ((oe_y_join4.1!y -> SKIP))
parameter_x_t = update_join4.2!(1-0) -> get_x_join4.2?x -> ((oe_x_join4.2!x -> SKIP))
join1_join4(y,x) = ((oe_y_join4.1?y -> SKIP) ||| (oe_x_join4.2?x -> SKIP)); update_join4.3!(1-2) -> ((oe_y_join4.3!y -> SKIP) |~| (oe_x_join4.4!x -> SKIP)); join1_join4(y,x)
join1_join4_t = join1_join4(0,0) /\ END_DIAGRAM_join4
act1_join4 = (oe_y_join4.3?y -> lock_act1_join4.lock -> event_act1_join4 -> lock_act1_join4.unlock -> update_join4.4!(1-1) -> ((oe_y_join4.5!y -> SKIP)); act1_join4) [] (oe_x_join4.4?x -> lock_act1_join4.lock -> event_act1_join4 -> lock_act1_join4.unlock -> update_join4.4!(1-1) -> ((oe_x_join4.6!x -> SKIP)); act1_join4)
act1_join4_t = act1_join4 /\ END_DIAGRAM_join4
fin1_join4 = ((oe_y_join4.5?y -> SKIP) [] (oe_x_join4.6?x -> SKIP)); clear_join4.1 -> SKIP
fin1_join4_t = fin1_join4 /\ END_DIAGRAM_join4
init_join4_t = (parameter_y_t ||| parameter_x_t) /\ END_DIAGRAM_join4
Mem_join4_x(x) = get_x_join4?c!x -> Mem_join4_x(x) [] set_x_join4?c?x -> Mem_join4_x(x)
Mem_join4_x_t(x) = Mem_join4_x(x) /\ (endActivity_join4?x -> SKIP)
Mem_join4_y(y) = get_y_join4?c!y -> Mem_join4_y(y) [] set_y_join4?c?y -> Mem_join4_y(y)
Mem_join4_y_t(y) = Mem_join4_y(y) /\ (endActivity_join4?y -> SKIP)
Mem_join4 = (Mem_join4_x_t(0) [|{|endActivity_join4|}|] Mem_join4_y_t(0))
TokenManager_join4(x,init) = update_join4?c?y:limiteUpdate_join4 -> x+y < 10 & x+y > -10 & TokenManager_join4(x+y,1) [] clear_join4?c -> endDiagram_join4 -> SKIP [] x == 0 & init == 1 & endDiagram_join4 -> SKIP
TokenManager_join4_t(x,init) = TokenManager_join4(x,init)
Lock_act1_join4 = lock_act1_join4.lock -> lock_act1_join4.unlock -> Lock_act1_join4 [] endDiagram_join4 -> SKIP
Lock_join4 = Lock_act1_join4