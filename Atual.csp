datatype COM = s | r
datatype ID = lf1id | lf2id | lf3id
datatype ID_SD = sd1id | sd2id
MyInteger ={0,1,2,3,4,5,6,7,8,9}

datatype Guard = e1.Bool | e2.Bool


MyString ={"teste"}
IntParams = {3}
DoubleParams = {2.5}
CharParams = {'a'}
datatype MSG = m1 | m0_I | m0_O | m2
subtype A_SIG = m1
subtype B_OPS = m0_I | m0_O
subtype C_SIG = m2
get_id(m0_I) = m0_I
get_id(m0_O) = m0_O
get_id(m2) = m2

channel beginInteraction,endInteraction
channel A_mSIG: COM.ID.ID.A_SIG
channel B_mOP: COM.ID.ID.B_OPS
channel C_mSIG: COM.ID.ID.C_SIG



Seq0_A(sd_id,lf1_id,lf2_id) =(B_mOP.s!lf1_id!lf2_id.m0_I -> SKIP);(B_mOP.r!lf2_id!lf1_id?out:{x | x <-B_OPS,(x == m0_O)} -> SKIP) if g1 then else if g2 then else SKIP

Seq0_B(sd_id,lf1_id,lf2_id,lf3_id) =(B_mOP.r!lf1_id!lf2_id?oper:{x | x <- B_OPS,(get_id(x) == m0_I)} -> SKIP);(B_mOP.s!lf2_id!lf1_id.m0_O -> SKIP);(C_mSIG.s!lf2_id!lf3_id.m2 -> SKIP)

Seq0_C(sd_id,lf2_id,lf3_id) =(C_mSIG.r!lf2_id!lf3_id?signal:{x | x <- C_SIG,(get_id(x) == m2)} -> SKIP)

Seq0_m0(sd_id,lf1_id,lf2_id) =B_mOP.s.lf1_id.lf2_id?x:{x | x<-B_OPS,get_id(x) == m0_I} -> B_mOP.r.lf1_id.lf2_id.x -> Seq0_m0(sd_id,lf1_id,lf2_id)

Seq0_m0_r(sd_id,lf2_id,lf1_id) = B_mOP.s.lf2_id.lf1_id?x:{x | x<-B_OPS,get_id(x) == m0_O} -> B_mOP.r.lf2_id.lf1_id!x -> Seq0_m0_r(sd_id,lf2_id,lf1_id)

Seq0_m2(sd_id,lf2_id,lf3_id) = C_mSIG.s.lf2_id.lf3_id?x:{x | x<-C_SIG,get_id(x) == m2} -> C_mSIG.r.lf2_id.lf3_id!x -> Seq0_m2(sd_id,lf2_id,lf3_id)

Seq0_MessagesBuffer(sd_id,lf1_id,lf2_id,lf3_id) = (Seq0_m0(sd_id,lf1_id,lf2_id) ||| Seq0_m0_r(sd_id,lf2_id,lf1_id) ||| Seq0_m2(sd_id,lf2_id,lf3_id) )/\endInteraction -> SKIP

Seq0Parallel(sd_id,lf1_id,lf2_id,lf3_id) = (Seq0_A(sd_id,lf1_id,lf2_id)[ {|alt1,B_mOP.s.lf1_id.lf2_id, B_mOP.r.lf2_id.lf1_id|} || {|B_mOP.r.lf1_id.lf2_id, B_mOP.s.lf2_id.lf1_id, C_mSIG.s.lf2_id.lf3_id|} ]Seq0_B(sd_id,lf1_id,lf2_id,lf3_id))[ {|B_mOP.s.lf1_id.lf2_id, B_mOP.r.lf2_id.lf1_id, B_mOP.r.lf1_id.lf2_id, B_mOP.s.lf2_id.lf1_id, C_mSIG.s.lf2_id.lf3_id|} || {|C_mSIG.r.lf2_id.lf3_id|} ]Seq0_C(sd_id,lf2_id,lf3_id)

SD(sd_id,lf1_id,lf2_id,lf3_id) = beginInteraction ->((Seq0Parallel(sd_id,lf1_id,lf2_id,lf3_id); endInteraction -> SKIP)[|{|B_mOP.s.lf1_id.lf2_id, B_mOP.r.lf2_id.lf1_id, B_mOP.r.lf1_id.lf2_id, B_mOP.s.lf2_id.lf1_id, C_mSIG.s.lf2_id.lf3_id,C_mSIG.r.lf2_id.lf3_id,endInteraction|}|]Seq0_MessagesBuffer(sd_id,lf1_id,lf2_id,lf3_id))
