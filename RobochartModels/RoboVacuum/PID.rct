stm PID {
	uses PIDEVents
	uses PIDVariables
	event err_output : int
	initial i0
	state Update {
		entry error = actual_value - target_value ; integral = integral + ( error *
		step ) ; derivative = floor(( error - prior_error ) / step) ; output = kp * error +
		ki * integral + kd * derivative ; prior_error = error ; err_output ! output
		; old_target = target_value
	}

	state Wait_target {
	}
	transition t0 {
		from i0
		to Wait_target
//		trigger
		action 
	prior_error = 0 ; integral = 0
	}
	transition t1 {
		from Update
		to Wait_target 
//		trigger
		action wait ( step )
	}
	transition t4 {
		from Wait_target
		to Wait_actual
		trigger target ? target_value
		condition target_value == old_target
	}
	transition t5 {
		from Wait_actual
		to Update
		trigger actual ? actual_value
	}
	transition t2 {
		from Wait_target
		to Reset
		trigger target ? target_value
		condition target_value != old_target
	}
	transition t3 {
		from Reset
		to Update
		trigger actual ? actual_value
	}
	state Wait_actual {
	}

	state Reset {
		entry prior_error = 0 ; integral = 0
	}
}