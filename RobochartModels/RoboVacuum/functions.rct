function sqrt( a : real) : real {
	postcondition forall x : real | x > 0 @ sqrt ( x ) * sqrt ( x ) == x
}
function abs( a : real) : real {
	postcondition forall x : real | x >= 0 @ abs ( x ) == x
	postcondition forall y : real | y < 0 @ abs ( y ) == - y
}
function turn_right( x : Orientation) : Orientation {
	postcondition forall a : Orientation | a == Orientation::up @ turn_right ( a ) == Orientation::right
	postcondition forall b : Orientation | b == Orientation::right @ turn_right ( b ) == Orientation::down
	postcondition forall c : Orientation | c == Orientation::down @ turn_right ( c ) == Orientation::left
	postcondition forall d : Orientation | d == Orientation::left @ turn_right ( d ) == Orientation::up
}
function turn_left( x : Orientation) : Orientation {
	postcondition forall a : Orientation | a == Orientation::up @ turn_left ( a ) == Orientation::left
	postcondition forall b : Orientation | b == Orientation::left @ turn_left ( b ) == Orientation::down
	postcondition forall c : Orientation | c == Orientation::down @ turn_left ( c ) == Orientation::right
	postcondition forall d : Orientation | d == Orientation::right @ turn_left ( d ) == Orientation::up
}
function get_sign( a : int) : int {
	postcondition forall x : int | x >= 0 @ get_sign ( x ) == 1
	postcondition forall y : int | y < 0 @ get_sign ( y ) == - 1
}
function get_linear_speed( spl : int , spr : int) : int {
	postcondition forall x : int , y : int @ get_linear_speed ( x , y ) == ( x + y ) / 2
}
function floor( x : real) : int {
	postcondition forall y : real @ floor ( y ) <= y /\ floor ( y ) + 1 > y
}