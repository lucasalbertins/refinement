transparent normal
include "file_PathPlanningSM_coreassertions.csp"
ID_P_ReturnToCharge_Final = {1..1}
datatype alphabet_P_ReturnToCharge_Final = accept_ultrasonic_1_P_ReturnToCharge_Final_t_alphabet | P_NoFall_P_ReturnToCharge_Final_t_alphabet| accept_charging_1_P_ReturnToCharge_Final_t_alphabet| accept_battery_level_1_P_ReturnToCharge_Final_t_alphabet| InitialNode0_P_ReturnToCharge_Final_t_alphabet| signal_move_forward_1_P_ReturnToCharge_Final_t_alphabet| DecisionNode_MergeNode4_P_ReturnToCharge_Final_t_alphabet| signal_move_forward_2_P_ReturnToCharge_Final_t_alphabet| DecisionNode_MergeNode0_P_ReturnToCharge_Final_t_alphabet| DecisionNode_MergeNode3_P_ReturnToCharge_Final_t_alphabet| DecisionNode_MergeNode2_P_ReturnToCharge_Final_t_alphabet| signal_clean_false__1_P_ReturnToCharge_Final_t_alphabet| signal_turn_Direction_left__1_P_ReturnToCharge_Final_t_alphabet| signal_turn_Direction_left__2_P_ReturnToCharge_Final_t_alphabet| signal_turn_Direction_left__3_P_ReturnToCharge_Final_t_alphabet| signal_turn_Direction_left__4_P_ReturnToCharge_Final_t_alphabet| x_1_P_ReturnToCharge_Final_t_alphabet
core_int_P_ReturnToCharge_Final = {(-2)..2}
countGet_P_ReturnToCharge_Final = {1..2}
countSet_P_ReturnToCharge_Final = {1..1}
countCe_P_ReturnToCharge_Final = {1..12}
countOe_P_ReturnToCharge_Final = {1..6}
countUpdate_P_ReturnToCharge_Final = {1..1}
countClear_P_ReturnToCharge_Final = {1..0}
limiteUpdate_P_ReturnToCharge_Final = {(1)..(1)}
channel startActivity_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final
channel endActivity_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final
channel get_b_battery_level_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.countGet_P_ReturnToCharge_Final.core_int_P_ReturnToCharge_Final
channel set_b_battery_level_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.countSet_P_ReturnToCharge_Final.core_int_P_ReturnToCharge_Final
channel get_y_x_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.countGet_P_ReturnToCharge_Final.core_int_P_ReturnToCharge_Final
channel set_y_x_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.countSet_P_ReturnToCharge_Final.core_int_P_ReturnToCharge_Final
channel ce_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.countCe_P_ReturnToCharge_Final
channel oe_4_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.core_int_P_ReturnToCharge_Final
channel oe_1_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.core_int_P_ReturnToCharge_Final
channel oe_3_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.core_int_P_ReturnToCharge_Final
channel oe_5_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.core_int_P_ReturnToCharge_Final
channel oe_6_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.core_int_P_ReturnToCharge_Final
channel oe_2_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.core_int_P_ReturnToCharge_Final
channel clear_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.countClear_P_ReturnToCharge_Final
channel update_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final.countUpdate_P_ReturnToCharge_Final.limiteUpdate_P_ReturnToCharge_Final
channel endDiagram_P_ReturnToCharge_Final: ID_P_ReturnToCharge_Final
channel dc
channel chaos:  {1..1}

alphabet_Astah_P_ReturnToCharge_Final = {| startActivity_P_ReturnToCharge_Final, endActivity_P_ReturnToCharge_Final, ce_P_ReturnToCharge_Final, oe_4_P_ReturnToCharge_Final, oe_1_P_ReturnToCharge_Final, oe_3_P_ReturnToCharge_Final, oe_5_P_ReturnToCharge_Final, oe_6_P_ReturnToCharge_Final, oe_2_P_ReturnToCharge_Final, clear_P_ReturnToCharge_Final, update_P_ReturnToCharge_Final, endDiagram_P_ReturnToCharge_Final, dc |}

MAIN = normal(P_ReturnToCharge_Final(1))
END_DIAGRAM_P_ReturnToCharge_Final(id) = endDiagram_P_ReturnToCharge_Final.id -> SKIP
P_ReturnToCharge_Final(ID_P_ReturnToCharge_Final) = (Internal_P_ReturnToCharge_Final(ID_P_ReturnToCharge_Final) [|{|update_P_ReturnToCharge_Final,clear_P_ReturnToCharge_Final,endDiagram_P_ReturnToCharge_Final|}|] TokenManager_P_ReturnToCharge_Final_t(ID_P_ReturnToCharge_Final,0,0))
Internal_P_ReturnToCharge_Final(id) = StartActivity_P_ReturnToCharge_Final(id); Node_P_ReturnToCharge_Final(id); EndActivity_P_ReturnToCharge_Final(id)
StartActivity_P_ReturnToCharge_Final(id) = startActivity_P_ReturnToCharge_Final.id -> SKIP
EndActivity_P_ReturnToCharge_Final(id) = endActivity_P_ReturnToCharge_Final.id -> SKIP
AlphabetDiagram_P_ReturnToCharge_Final(id,accept_ultrasonic_1_P_ReturnToCharge_Final_t_alphabet) = {|ce_P_ReturnToCharge_Final.id.9,oe_4_P_ReturnToCharge_Final.id,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,P_NoFall_P_ReturnToCharge_Final_t_alphabet) = {|ce_P_ReturnToCharge_Final.id.4,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,accept_charging_1_P_ReturnToCharge_Final_t_alphabet) = {|ce_P_ReturnToCharge_Final.id.11,ce_P_ReturnToCharge_Final.id.3,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,accept_battery_level_1_P_ReturnToCharge_Final_t_alphabet) = {|ce_P_ReturnToCharge_Final.id.2,oe_1_P_ReturnToCharge_Final.id,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,InitialNode0_P_ReturnToCharge_Final_t_alphabet) = {|ce_P_ReturnToCharge_Final.id.1,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,signal_move_forward_1_P_ReturnToCharge_Final_t_alphabet) = {|ce_P_ReturnToCharge_Final.id.6,ce_P_ReturnToCharge_Final.id.7,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,DecisionNode_MergeNode4_P_ReturnToCharge_Final_t_alphabet) = {|ce_P_ReturnToCharge_Final.id.8,ce_P_ReturnToCharge_Final.id.12,ce_P_ReturnToCharge_Final.id.9,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,signal_move_forward_2_P_ReturnToCharge_Final_t_alphabet) = {|ce_P_ReturnToCharge_Final.id.10,ce_P_ReturnToCharge_Final.id.11,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,DecisionNode_MergeNode0_P_ReturnToCharge_Final_t_alphabet) = {|ce_P_ReturnToCharge_Final.id.1,ce_P_ReturnToCharge_Final.id.3,ce_P_ReturnToCharge_Final.id.2,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,DecisionNode_MergeNode3_P_ReturnToCharge_Final_t_alphabet) = {|oe_4_P_ReturnToCharge_Final.id,dc,oe_5_P_ReturnToCharge_Final.id,oe_6_P_ReturnToCharge_Final.id,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,DecisionNode_MergeNode2_P_ReturnToCharge_Final_t_alphabet) = {|oe_1_P_ReturnToCharge_Final.id,dc,oe_2_P_ReturnToCharge_Final.id,oe_3_P_ReturnToCharge_Final.id,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,signal_clean_false__1_P_ReturnToCharge_Final_t_alphabet) = {|ce_P_ReturnToCharge_Final.id.7,ce_P_ReturnToCharge_Final.id.8,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,signal_turn_Direction_left__1_P_ReturnToCharge_Final_t_alphabet) = {|oe_2_P_ReturnToCharge_Final.id,ce_P_ReturnToCharge_Final.id.4,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,signal_turn_Direction_left__2_P_ReturnToCharge_Final_t_alphabet) = {|ce_P_ReturnToCharge_Final.id.5,ce_P_ReturnToCharge_Final.id.6,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,signal_turn_Direction_left__3_P_ReturnToCharge_Final_t_alphabet) = {|oe_6_P_ReturnToCharge_Final.id,ce_P_ReturnToCharge_Final.id.10,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,signal_turn_Direction_left__4_P_ReturnToCharge_Final_t_alphabet) = {|oe_3_P_ReturnToCharge_Final.id,ce_P_ReturnToCharge_Final.id.5,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final(id,x_1_P_ReturnToCharge_Final_t_alphabet) = {|oe_5_P_ReturnToCharge_Final.id,ce_P_ReturnToCharge_Final.id.12,endDiagram_P_ReturnToCharge_Final.id|}
AlphabetDiagram_P_ReturnToCharge_Final_t(id) = union(union(union(union(union(union(union(union(union(union(union(union(union(union(union(union(AlphabetDiagram_P_ReturnToCharge_Final(id,accept_ultrasonic_1_P_ReturnToCharge_Final_t_alphabet),AlphabetDiagram_P_ReturnToCharge_Final(id,P_NoFall_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,accept_charging_1_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,accept_battery_level_1_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,InitialNode0_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,signal_move_forward_1_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,DecisionNode_MergeNode4_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,signal_move_forward_2_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,DecisionNode_MergeNode0_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,DecisionNode_MergeNode3_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,DecisionNode_MergeNode2_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,signal_clean_false__1_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,signal_turn_Direction_left__1_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,signal_turn_Direction_left__2_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,signal_turn_Direction_left__3_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,signal_turn_Direction_left__4_P_ReturnToCharge_Final_t_alphabet)),AlphabetDiagram_P_ReturnToCharge_Final(id,x_1_P_ReturnToCharge_Final_t_alphabet))

ProcessDiagram_P_ReturnToCharge_Final(id,accept_ultrasonic_1_P_ReturnToCharge_Final_t_alphabet) = normal(accept_ultrasonic_1_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,P_NoFall_P_ReturnToCharge_Final_t_alphabet) = normal(P_NoFall_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,accept_charging_1_P_ReturnToCharge_Final_t_alphabet) = normal(accept_charging_1_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,accept_battery_level_1_P_ReturnToCharge_Final_t_alphabet) = normal(accept_battery_level_1_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,InitialNode0_P_ReturnToCharge_Final_t_alphabet) = normal(InitialNode0_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,signal_move_forward_1_P_ReturnToCharge_Final_t_alphabet) = normal(signal_move_forward_1_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,DecisionNode_MergeNode4_P_ReturnToCharge_Final_t_alphabet) = normal(DecisionNode_MergeNode4_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,signal_move_forward_2_P_ReturnToCharge_Final_t_alphabet) = normal(signal_move_forward_2_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,DecisionNode_MergeNode0_P_ReturnToCharge_Final_t_alphabet) = normal(DecisionNode_MergeNode0_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,DecisionNode_MergeNode3_P_ReturnToCharge_Final_t_alphabet) = normal(DecisionNode_MergeNode3_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,DecisionNode_MergeNode2_P_ReturnToCharge_Final_t_alphabet) = normal(DecisionNode_MergeNode2_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,signal_clean_false__1_P_ReturnToCharge_Final_t_alphabet) = normal(signal_clean_false__1_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,signal_turn_Direction_left__1_P_ReturnToCharge_Final_t_alphabet) = normal(signal_turn_Direction_left__1_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,signal_turn_Direction_left__2_P_ReturnToCharge_Final_t_alphabet) = normal(signal_turn_Direction_left__2_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,signal_turn_Direction_left__3_P_ReturnToCharge_Final_t_alphabet) = normal(signal_turn_Direction_left__3_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,signal_turn_Direction_left__4_P_ReturnToCharge_Final_t_alphabet) = normal(signal_turn_Direction_left__4_P_ReturnToCharge_Final_t(id))
ProcessDiagram_P_ReturnToCharge_Final(id,x_1_P_ReturnToCharge_Final_t_alphabet) = normal(x_1_P_ReturnToCharge_Final_t(id))
InitialNode0_P_ReturnToCharge_Final(id) = update_P_ReturnToCharge_Final.id.1!(1-0) -> ((ce_P_ReturnToCharge_Final.id.1 -> SKIP))
InitialNode0_P_ReturnToCharge_Final_t(id) = InitialNode0_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
accept_battery_level_1_P_ReturnToCharge_Final(id) = ((ce_P_ReturnToCharge_Final.id.2 -> SKIP)); WAIT_accept_battery_level_1(id, alphabet_robochart_P_ReturnToCharge_Final) [| {|set_b_battery_level_P_ReturnToCharge_Final.id |} |> get_b_battery_level_P_ReturnToCharge_Final.id.1?b -> ((oe_1_P_ReturnToCharge_Final.id!b -> SKIP)); accept_battery_level_1_P_ReturnToCharge_Final(id)
accept_battery_level_1_P_ReturnToCharge_Final_t(id) = ((accept_battery_level_1_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)) [|{|get_b_battery_level_P_ReturnToCharge_Final.id,set_b_battery_level_P_ReturnToCharge_Final.id,endDiagram_P_ReturnToCharge_Final.id|}|] Mem_battery_level_P_ReturnToCharge_Final_b_t(id,-2)) \{|get_b_battery_level_P_ReturnToCharge_Final.id,set_b_battery_level_P_ReturnToCharge_Final.id|}
DecisionNode_MergeNode0_P_ReturnToCharge_Final(id) = ((ce_P_ReturnToCharge_Final.id.1 -> SKIP) [] (ce_P_ReturnToCharge_Final.id.3 -> SKIP)); ce_P_ReturnToCharge_Final.id.2 -> DecisionNode_MergeNode0_P_ReturnToCharge_Final(id)
DecisionNode_MergeNode0_P_ReturnToCharge_Final_t(id) = DecisionNode_MergeNode0_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
signal_turn_Direction_left__1_P_ReturnToCharge_Final(id) = ((oe_2_P_ReturnToCharge_Final.id?x -> SKIP)); PathPlanningSM::turn.out.Direction_left -> ((ce_P_ReturnToCharge_Final.id.4 -> SKIP)); signal_turn_Direction_left__1_P_ReturnToCharge_Final(id)
signal_turn_Direction_left__1_P_ReturnToCharge_Final_t(id) = signal_turn_Direction_left__1_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
DecisionNode_MergeNode2_P_ReturnToCharge_Final(id) = oe_1_P_ReturnToCharge_Final.id?b -> (b > 0 & (dc -> oe_2_P_ReturnToCharge_Final.id!b -> SKIP) [] b <= 0 & (dc -> oe_3_P_ReturnToCharge_Final.id!b -> SKIP)); DecisionNode_MergeNode2_P_ReturnToCharge_Final(id)
DecisionNode_MergeNode2_P_ReturnToCharge_Final_t(id) = (DecisionNode_MergeNode2_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)) \{|dc|}
signal_turn_Direction_left__2_P_ReturnToCharge_Final(id) = ((ce_P_ReturnToCharge_Final.id.5 -> SKIP)); PathPlanningSM::turn.out.Direction_left -> ((ce_P_ReturnToCharge_Final.id.6 -> SKIP)); signal_turn_Direction_left__2_P_ReturnToCharge_Final(id)
signal_turn_Direction_left__2_P_ReturnToCharge_Final_t(id) = signal_turn_Direction_left__2_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
signal_move_forward_1_P_ReturnToCharge_Final(id) = ((ce_P_ReturnToCharge_Final.id.6 -> SKIP)); PathPlanningSM::move_forward.out -> ((ce_P_ReturnToCharge_Final.id.7 -> SKIP)); signal_move_forward_1_P_ReturnToCharge_Final(id)
signal_move_forward_1_P_ReturnToCharge_Final_t(id) = signal_move_forward_1_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
signal_clean_false__1_P_ReturnToCharge_Final(id) = ((ce_P_ReturnToCharge_Final.id.7 -> SKIP)); PathPlanningSM::clean.out.false -> ((ce_P_ReturnToCharge_Final.id.8 -> SKIP)); signal_clean_false__1_P_ReturnToCharge_Final(id)
signal_clean_false__1_P_ReturnToCharge_Final_t(id) = signal_clean_false__1_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
accept_ultrasonic_1_P_ReturnToCharge_Final(id) = ((ce_P_ReturnToCharge_Final.id.9 -> SKIP)); PathPlanningSM::ultrasonic.in?u -> ((oe_4_P_ReturnToCharge_Final.id!u -> SKIP)); accept_ultrasonic_1_P_ReturnToCharge_Final(id)
accept_ultrasonic_1_P_ReturnToCharge_Final_t(id) = accept_ultrasonic_1_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
DecisionNode_MergeNode3_P_ReturnToCharge_Final(id) = oe_4_P_ReturnToCharge_Final.id?u -> (u < 1 & (dc -> oe_5_P_ReturnToCharge_Final.id!u -> SKIP) [] u >= 1 & (dc -> oe_6_P_ReturnToCharge_Final.id!u -> SKIP)); DecisionNode_MergeNode3_P_ReturnToCharge_Final(id)
DecisionNode_MergeNode3_P_ReturnToCharge_Final_t(id) = (DecisionNode_MergeNode3_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)) \{|dc|}
signal_turn_Direction_left__3_P_ReturnToCharge_Final(id) = ((oe_6_P_ReturnToCharge_Final.id?x -> SKIP)); PathPlanningSM::turn.out.Direction_left -> ((ce_P_ReturnToCharge_Final.id.10 -> SKIP)); signal_turn_Direction_left__3_P_ReturnToCharge_Final(id)
signal_turn_Direction_left__3_P_ReturnToCharge_Final_t(id) = signal_turn_Direction_left__3_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
signal_move_forward_2_P_ReturnToCharge_Final(id) = ((ce_P_ReturnToCharge_Final.id.10 -> SKIP)); PathPlanningSM::move_forward.out -> ((ce_P_ReturnToCharge_Final.id.11 -> SKIP)); signal_move_forward_2_P_ReturnToCharge_Final(id)
signal_move_forward_2_P_ReturnToCharge_Final_t(id) = signal_move_forward_2_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
accept_charging_1_P_ReturnToCharge_Final(id) = ((ce_P_ReturnToCharge_Final.id.11 -> SKIP)); PathPlanningSM::charging.in -> ((ce_P_ReturnToCharge_Final.id.3 -> SKIP)); accept_charging_1_P_ReturnToCharge_Final(id)
accept_charging_1_P_ReturnToCharge_Final_t(id) = accept_charging_1_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
DecisionNode_MergeNode4_P_ReturnToCharge_Final(id) = ((ce_P_ReturnToCharge_Final.id.8 -> SKIP) [] (ce_P_ReturnToCharge_Final.id.12 -> SKIP)); ce_P_ReturnToCharge_Final.id.9 -> DecisionNode_MergeNode4_P_ReturnToCharge_Final(id)
DecisionNode_MergeNode4_P_ReturnToCharge_Final_t(id) = DecisionNode_MergeNode4_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
x_1_P_ReturnToCharge_Final(id) = ((oe_5_P_ReturnToCharge_Final.id?y -> set_y_x_P_ReturnToCharge_Final.id.1!y -> SKIP)); get_y_x_P_ReturnToCharge_Final.id.2?y -> ((ce_P_ReturnToCharge_Final.id.12 -> SKIP)); x_1_P_ReturnToCharge_Final(id)
x_1_P_ReturnToCharge_Final_t(id) = ((x_1_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)) [|{|get_y_x_P_ReturnToCharge_Final.id,set_y_x_P_ReturnToCharge_Final.id,endDiagram_P_ReturnToCharge_Final.id|}|] Mem_x_P_ReturnToCharge_Final_y_t(id,-2)) \{|get_y_x_P_ReturnToCharge_Final.id,set_y_x_P_ReturnToCharge_Final.id|}
signal_turn_Direction_left__4_P_ReturnToCharge_Final(id) = ((oe_3_P_ReturnToCharge_Final.id?x -> SKIP)); PathPlanningSM::turn.out.Direction_left -> ((ce_P_ReturnToCharge_Final.id.5 -> SKIP)); signal_turn_Direction_left__4_P_ReturnToCharge_Final(id)
signal_turn_Direction_left__4_P_ReturnToCharge_Final_t(id) = signal_turn_Direction_left__4_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
P_NoFall_P_ReturnToCharge_Final(id) = ((ce_P_ReturnToCharge_Final.id.4 -> SKIP)); chaos.1 -> SKIP;P_NoFall_P_ReturnToCharge_Final(id)
P_NoFall_P_ReturnToCharge_Final_t(id) = P_NoFall_P_ReturnToCharge_Final(id) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
Mem_battery_level_P_ReturnToCharge_Final_b(id,b) = get_b_battery_level_P_ReturnToCharge_Final.id?c!b -> Mem_battery_level_P_ReturnToCharge_Final_b(id,b) [] set_b_battery_level_P_ReturnToCharge_Final.id?c?b -> Mem_battery_level_P_ReturnToCharge_Final_b(id,b)
Mem_battery_level_P_ReturnToCharge_Final_b_t(id,b) = Mem_battery_level_P_ReturnToCharge_Final_b(id,b) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
Mem_x_P_ReturnToCharge_Final_y(id,y) = get_y_x_P_ReturnToCharge_Final.id?c!y -> Mem_x_P_ReturnToCharge_Final_y(id,y) [] set_y_x_P_ReturnToCharge_Final.id?c?y -> Mem_x_P_ReturnToCharge_Final_y(id,y)
Mem_x_P_ReturnToCharge_Final_y_t(id,y) = Mem_x_P_ReturnToCharge_Final_y(id,y) /\ END_DIAGRAM_P_ReturnToCharge_Final(id)
AlphabetMemP_NoFall_P_ReturnToCharge_Final(id) = {|endDiagram_P_ReturnToCharge_Final.id|}

TokenManager_P_ReturnToCharge_Final(id,x,init) = update_P_ReturnToCharge_Final.id?c?y:limiteUpdate_P_ReturnToCharge_Final -> x+y < 10 & x+y > -10 & TokenManager_P_ReturnToCharge_Final(id,x+y,1) [] clear_P_ReturnToCharge_Final.id?c -> endDiagram_P_ReturnToCharge_Final.id -> SKIP [] x == 0 & init == 1 & endDiagram_P_ReturnToCharge_Final.id -> SKIP
TokenManager_P_ReturnToCharge_Final_t(id,x,init) = TokenManager_P_ReturnToCharge_Final(id,x,init)

assert Prop_P_ReturnToCharge_Final [T= P_PathPlanningSM

NRecurse(S, P) = |~| ev : S @ ev -> P

WAIT_accept_battery_level_1(id, alphabet) = 
NRecurse(diff(alphabet, {|PathPlanningSM::battery_level.in|}), WAIT_accept_battery_level_1(id, alphabet))
 |~| 
PathPlanningSM::battery_level.in?b -> set_b_battery_level_P_ReturnToCharge_Final.id?c!b -> SKIP

WAIT(alphabet,event) = 
	NRecurse(diff(alphabet, {event}), WAIT(alphabet,event))
	|~|
	event -> SKIP

WAIT_PROCCESSES_P_ReturnToCharge_Final(processes) = ( ||| CONTROL : processes @ CONTROL )  /\ endDiagram_P_ReturnToCharge_Final?id -> SKIP

Prop_P_ReturnToCharge_Final = PROP_P_ReturnToCharge_Final(Wait_control_processes_P_ReturnToCharge_Final) \ alphabet_Astah_P_ReturnToCharge_Final 

alphabet_robochart_P_ReturnToCharge_Final = {| PathPlanningSM::move_forward.out, PathPlanningSM::turn.out.Direction_left, PathPlanningSM::turn.out.Direction_right, PathPlanningSM::stop.out, PathPlanningSM::ultrasonic.in.-2, PathPlanningSM::ultrasonic.in.-1, PathPlanningSM::ultrasonic.in.0, PathPlanningSM::ultrasonic.in.1, PathPlanningSM::ultrasonic.in.2, PathPlanningSM::battery_level.in.-2, PathPlanningSM::battery_level.in.-1, PathPlanningSM::battery_level.in.0, PathPlanningSM::battery_level.in.1, PathPlanningSM::battery_level.in.2, PathPlanningSM::charging.in, PathPlanningSM::clean.out.false, PathPlanningSM::clean.out.true, PathPlanningSM::displacement.in.-2, PathPlanningSM::displacement.in.-1, PathPlanningSM::displacement.in.0, PathPlanningSM::displacement.in.1, PathPlanningSM::displacement.in.2, PathPlanningSM::displacement.out.0 |}

PROP_P_ReturnToCharge_Final(processes) = (MAIN [|{|chaos, endDiagram_P_ReturnToCharge_Final|}|] WAIT_PROCCESSES_P_ReturnToCharge_Final(processes) ) \ {|chaos|}

Wait_P_ReturnToCharge_Final_chaos_1 = chaos.1 -> CHAOS(alphabet_robochart_P_ReturnToCharge_Final)

Wait_control_processes_P_ReturnToCharge_Final = {Wait_P_ReturnToCharge_Final_chaos_1}

Node_P_ReturnToCharge_Final(id) = composeNodes_P_ReturnToCharge_Final(id)

composeNodes_P_ReturnToCharge_Final(id) = 
	let
	    alphabet_P_ReturnToCharge_Final_s = seq(alphabet_P_ReturnToCharge_Final)
		composeNodes_(id,<ev>,_) = ProcessDiagram_P_ReturnToCharge_Final(id,ev)
		composeNodes_(id,<ev>^tail,past) = 
			ProcessDiagram_P_ReturnToCharge_Final(id,ev) 
				[|union(diff(AlphabetDiagram_P_ReturnToCharge_Final(id,ev),past),{endDiagram_P_ReturnToCharge_Final.id})|] 
			( composeNodes_(id,tail,union(past,AlphabetDiagram_P_ReturnToCharge_Final(id,ev))) )
	within 
		composeNodes_(id,alphabet_P_ReturnToCharge_Final_s,{})

