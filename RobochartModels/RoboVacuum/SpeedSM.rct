stm SpeedSM {
	uses SpeedEvents
	const t : int
	var acceleration : TripleAxis
	var speed : TripleAxis
	initial i0
	state wait_input {
	}
	state update_speed {
		entry speed . X = speed . X + acceleration . X * t ; speed . Y = speed . Y +
		acceleration . Y * t ; speed . Z = speed . Z + acceleration . Z * t
	}
	transition t1 {
		from wait_input
		to update_speed
		trigger acc ? acceleration
	}
	transition t0 {
		from i0
		to wait_input
		trigger
		action speed . X = 0 ; speed . Y = 0 ; speed . Z = 0
	}
	transition t2 {
		from update_speed
		to wait_input
		trigger
		action sp ! speed ; wait ( t )
	}
}