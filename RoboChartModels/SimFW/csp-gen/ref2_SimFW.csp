
include "defs/SMovement_coreassertions.csp"


Recurse(S, P) = [] ev : S @ ev -> P --'Traces Model only'
NRecurse(S, P) = |~| ev : S @ ev -> P --'failures and Divergences Model only'

-- ALPHABET = {|SMovement::obstacle, SMovement::moveCall, SMovement::moveRet|}	

Wait = Recurse({|SMovement::moveCall, SMovement::moveRet|}, Wait)
		[]
		checkObstacle

checkObstacle = SMovement::obstacle.in -> Wait	

Wait2 = NRecurse({|SMovement::moveCall, SMovement::moveRet|}, Wait2)
		|~|
		checkObstacle2	

checkObstacle2 = SMovement::obstacle.in -> Wait2

--beginCicle = Wait

assert Wait [T= P_SMovement
assert Wait2 [FD= P_SMovement

--assert Property [FD= Sistem_SimFW


alphabet = {|SMovement::obstacle, SMovement::moveCall, SMovement::moveRet|}


WaitSimFW = NRecurse(diff(alphabet, {SMovement::obstacle.in}), WaitSimFW)
			|~|
			SMovement::obstacle.in -> WaitSimFW

assert WaitSimFW [FD= P_SMovement

